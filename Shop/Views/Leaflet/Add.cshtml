@model Shop.Models.Leaflet

@{
    ViewBag.Title = "Dodaj ulotkę";
}

<b>@TempData["message"]</b>
<h2>Dodaj ulotkę</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Ulotka</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.LeafletTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LeafletTitle)
            @Html.ValidationMessageFor(model => model.LeafletTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductsId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductsId)
            @Html.ValidationMessageFor(model => model.ProductsId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Content)
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Colour)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Colour)
            @Html.ValidationMessageFor(model => model.Colour)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Width)
            @Html.ValidationMessageFor(model => model.Width)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Height)
            @Html.ValidationMessageFor(model => model.Height)
        </div>

        <p>
            <input type="submit" value="Dodaj" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Powrót do listy", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
